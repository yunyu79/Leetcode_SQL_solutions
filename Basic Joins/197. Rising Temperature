Table: Weather
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+

# Q: Write a solution to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

# Reason1 to use **CROSS JOIN**: The CROSS JOIN query in SQL is used to generate **all combinations of records in two tables**. 
# It can be used when a question needs us to show all possible combinations. 

# Reason2 to use **> or < in ON clause**, because we can enter any type of conditional statement into the ON clause. 
# That means it only joins rows that fit the condition rather than joining all rows and then filtering. 
# Reference: https://mode.com/sql-tutorial/sql-join-comparison-operators 

# Solution1: Using CROSS JOIN. 
SELECT w1.id AS Id
FROM Weather w1 CROSS JOIN Weather w2
WHERE DATEDIFF(w1.recordDate, w2.recordDate) = 1 AND w1.temperature>w2.temperature;

# S2: Using comparison operators with joins. This solution uses '>' to join two tables according to specific conditions, rather than joining all rows and then filtering. 
SELECT w2.id from Weather w1 JOIN Weather w2
ON w2.temperature > w1.temperature AND
datediff(w2.recordDate,w1.recordDate) = 1;
# Reference: 123_tripathi, an author in Leetcode.
