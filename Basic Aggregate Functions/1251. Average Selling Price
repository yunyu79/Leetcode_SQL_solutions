Table: Prices
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| start_date    | date    |
| end_date      | date    |
| price         | int     |
+---------------+---------+

Table: UnitsSold
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| purchase_date | date    |
| units         | int     |
+---------------+---------+

Input
Prices =
| product_id | start_date | end_date   | price |
| ---------- | ---------- | ---------- | ----- |
| 1          | 2019-02-17 | 2019-02-28 | 5     |
| 1          | 2019-03-01 | 2019-03-22 | 20    |
| 2          | 2019-02-01 | 2019-02-20 | 15    |
| 2          | 2019-02-21 | 2019-03-31 | 30    |
| 3          | 2019-02-21 | 2019-03-31 | 30    |

UnitsSold =
| product_id | purchase_date | units |
| ---------- | ------------- | ----- |
| 1          | 2019-02-25    | 100   |
| 1          | 2019-03-01    | 15    |
| 2          | 2019-02-10    | 200   |
| 2          | 2019-03-22    | 30    |

Expected                                       ---------------> product_id needs to be all output -> LEFT JOIN
| product_id | average_price |
| ---------- | ------------- |
| 1          | 6.96          |
| 2          | 16.96         |
| 3          | 0             |                 ---------------> NULL should be changed to 0. --> ISNULL(expression, alternative_values) in SELECT clause  
                                              ---> ISNULL returns an alternative value if the expression is NULL, otherwise returns original expression.

# Q: Write a solution to find the average selling price for each product. average_price should be rounded to 2 decimal places.

# S: 
SELECT p.product_id, IFNULL(ROUND(SUM(price*units)/SUM(units),2),0) AS average_price 
FROM Prices p LEFT JOIN UnitsSold s
ON p.product_id = s.product_id AND purchase_date BETWEEN start_date AND end_date
GROUP BY p.product_id;
