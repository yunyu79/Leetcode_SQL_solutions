+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| article_id    | int     |
| author_id     | int     |
| viewer_id     | int     |
| view_date     | date    |
+---------------+---------+
# There is no primary key (column with unique values) for this table, the table may have duplicate rows. --> **DISTINCT**
# Note that equal author_id and viewer_id indicate the same person --> HAVING author_id = viewer_id

# Q: Write a solution to find all the authors that viewed at least one of their own articles.  --> GROUP BY + HAVING 
# Q: Return the result table sorted by id in ascending order. --> ORDER BY 

# Solution: Q needs us to return which articles are viewed by their authors. 
# HAVING: to know who as article authors to view their articles at least once
# GROUP BY: to know which articles were viewed by their authors at least once

SELECT DISTINCT author_id AS id
FROM Views
GROUP BY article_id, viewer_id
HAVING id= viewer_id AND COUNT(viewer_id) >= 1
ORDER BY id ASC;

OR faster solution: (But in other cases, such as all authors that viewed >= 2, this doesn't work. But the above one workes.)
SELECT DISTINCT author_id AS id
FROM Views
WHERE author_id = viewer_id 
ORDER BY id ASC;
