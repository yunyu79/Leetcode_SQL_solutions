Table: Products
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| new_price     | int     |
| change_date   | date    |
+---------------+---------+

# Q: Write a solution to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.

# S:                               -----------------------> To return a row containing a MAX value in its column, we need to use subquery to find out the MAX in a column,
                                                            then, we can find out the row containing this MAX value according to the returned MAX value. 
SELECT DISTINCT p.product_id, IFNULL(p1.new_price, 10) AS price 
FROM Products AS p 
LEFT JOIN (
    SELECT product_id, change_date, new_price
    FROM Products
    WHERE (product_id, change_date) IN (
        SELECT product_id, MAX(change_date)
        FROM Products
        WHERE change_date <= '2019-08-16'
        GROUP BY product_id 
    )
    ) AS p1
ON p.product_id = p1.product_id;
